{"topic": "Databases", "context": "SQL basics and table operations.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What does SQL stand for?\nWhich SQL statement is used to add new records?\nWhat is a primary key?", "length": 3}
{"topic": "Databases", "context": "The ACID properties in databases ensure reliable processing of database transactions.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What does the 'A' in ACID stand for in databases?\nWhat does the 'C' in ACID stand for in databases?\nWhat does the 'I' in ACID stand for in databases?\nWhat does the 'D' in ACID stand for in databases?", "length": 4}
{"topic": "Databases", "context": "A database management system (DBMS) is software that interacts with end users, applications, and the database itself to capture and analyze data.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is a DBMS?\nWhat is the primary function of a DBMS?", "length": 2}
{"topic": "Databases", "context": "A relational database organizes data into tables which can be linked—or related—based on data common to each.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is a relational database?\nWhat is a table in a relational database?", "length": 2}
{"topic": "Databases", "context": "SQL commands are used to perform tasks such as updating data on a database or retrieving data from a database.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is the purpose of SQL commands?\nWhat is the SQL command to retrieve data from a database?\nWhat is the SQL command to update existing data in a database?", "length": 3}
{"topic": "Databases", "context": "A database index is a data structure that improves the speed of data retrieval operations on a database table.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is the purpose of a database index?\nHow does an index improve query performance?", "length": 2}
{"topic": "Databases", "context": "Databases often use keys to uniquely identify records.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "Which type of key uniquely identifies each row in a table?\nWhat is a foreign key?", "length": 2}
{"topic": "Databases", "context": "Normalization is the process of organizing data to minimize redundancy.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is the purpose of normalization in databases?\nWhat is the first normal form (1NF)?", "length": 2}
{"topic": "Databases", "context": "SQL joins are used to combine rows from two or more tables based on a related column between them.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is an SQL JOIN?\nWhat type of join returns all records from both tables?", "length": 2}
{"topic": "Databases", "context": "Relational databases store data in tables consisting of rows and columns.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is a row in a database table also known as?\nWhat is a column in a database table also known as?", "length": 2}
{"topic": "Databases", "context": "A database transaction is a sequence of operations performed as a single logical unit of work.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is a transaction in the context of databases?\nWhat does it mean to commit a transaction?", "length": 2}
{"topic": "Databases", "context": "Data integrity ensures accuracy and consistency of data over its lifecycle.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is data integrity?\nWhat is referential integrity?", "length": 2}
{"topic": "Databases", "context": "Normalization is a process to reduce data redundancy and improve data integrity.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is the main goal of database normalization?\nWhat is the second normal form (2NF)?", "length": 2}
{"topic": "Databases", "context": "SQL allows for data manipulation through various commands like SELECT, INSERT, UPDATE, and DELETE.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What SQL command is used to delete records from a table?\nWhat SQL command is used to insert new records into a table?", "length": 2}
{"topic": "Databases", "context": "Indexes improve the speed of data retrieval operations on a database table.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is the main purpose of an index in a database?", "length": 1}
{"topic": "Databases", "context": "A database schema defines the structure of a database.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What does a database schema describe?\nWhat is a foreign key in a database schema?", "length": 2}
{"topic": "Databases", "context": "SQL is used to create, modify, manage, and query databases.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What does SQL stand for?\nWhat is the purpose of the CREATE TABLE statement in SQL?", "length": 2}
{"topic": "Databases", "context": "A database view is a virtual table based on the result-set of an SQL statement.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is a view in SQL?\nHow do you create a view in SQL?", "length": 2}
{"topic": "Databases", "context": "A join operation combines rows from two or more tables based on a related column.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What SQL clause is used to combine rows from two or more tables?", "length": 1}
{"topic": "Databases", "context": "The SELECT statement retrieves data from a database.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "Which SQL keyword is used to retrieve data from a database?", "length": 1}
{"topic": "Databases", "context": "SQL uses constraints to enforce rules at the table level.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "Which constraint prevents duplicate values in a column?", "length": 1}
{"topic": "Databases", "context": "The DELETE statement removes records from a table.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "Which SQL statement is used to remove records from a table?", "length": 1}
{"topic": "Databases", "context": "The UPDATE statement modifies existing records in a table.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "Which SQL statement is used to change data in a table?", "length": 1}
{"topic": "Databases", "context": "A NULL value in SQL means that the value is missing or unknown.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What does NULL represent in a database?", "length": 1}
{"topic": "Databases", "context": "A composite key consists of two or more columns used together as a primary key.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is a composite key?", "length": 1}
{"topic": "Databases", "context": "The second normal form (2NF) of database normalization eliminates partial dependencies.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What does the second normal form (2NF) eliminate?\nWhy is 2NF important in normalization?", "length": 2}
{"topic": "Databases", "context": "The GROUP BY clause in SQL is used to group rows that have the same values in specified columns.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "Which SQL clause is used to group rows based on column values?\nWhat is the purpose of GROUP BY in SQL?", "length": 2}
{"topic": "Databases", "context": "An inner join returns only the rows where there is a match in both tables.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "Which type of join returns rows with matching values in both tables?\nWhat happens if there is no match in an INNER JOIN?", "length": 2}
{"topic": "Databases", "context": "The HAVING clause is used to filter groups after applying GROUP BY.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What is the purpose of the HAVING clause in SQL?\nHow is HAVING different from WHERE?", "length": 2}
{"topic": "Databases", "context": "Stored procedures are collections of SQL statements that perform a logical operation.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What is a stored procedure?\nWhy use stored procedures?", "length": 2}
{"topic": "Databases", "context": "The ORDER BY clause sorts the result set of a query by one or more columns.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "Which SQL clause is used to sort the result set?\nWhat is the default sorting order in SQL?", "length": 2}
{"topic": "Databases", "context": "A left join returns all records from the left table and matched records from the right table.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What does a LEFT JOIN return?\nWhat happens to unmatched rows in a LEFT JOIN?", "length": 2}
{"topic": "Databases", "context": "The SQL IN operator allows you to specify multiple values in a WHERE clause.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What does the IN operator do in SQL?\nHow is the IN operator used?", "length": 2}
{"topic": "Databases", "context": "We can manually update statistics in cases where automatic updates are insufficient or if manual intervention is needed. In SQL Server, we can use the UPDATE STATISTICS command to refresh the statistics for a specific table or index, while in PostgreSQL, the ANALYZE command can be run to update statistics for one or more tables.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What is the purpose of updating statistics in a database?\nHow can you manually update statistics in SQL Server?\nHow can you manually update statistics in PostgreSQL?\nWhen should you consider manually updating statistics?\nWhat is the impact of outdated statistics on query performance?", "length": 5}
{"topic": "Databases", "context": "Triggers are database operations that are automatically performed when a specified event occurs.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What is a database trigger?\nWhen can a trigger be set to fire?", "length": 2}
{"topic": "Databases", "context": "The SQL UNION operator combines the results of two or more SELECT statements.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What does the UNION operator do in SQL?\nWhat is required for UNION to work?\nWhich SQL operator combines the results of two SELECT queries?\nWhat is the difference between UNION and UNION ALL?", "length": 4}
{"topic": "Databases", "context": "Data Integrity ensures the accuracy and consistency of data in a database.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What is data integrity?\nHow can data integrity be enforced in a database?", "length": 2}
{"topic": "Databases", "context": "The DISTINCT keyword in SQL is used to return only unique values.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What does the DISTINCT keyword do in SQL?\nHow is DISTINCT used in a query?", "length": 2}
{"topic": "Databases", "context": "A transaction can be rolled back to undo changes made during the transaction.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What does it mean to roll back a transaction?\nWhen would you use a rollback?", "length": 2}
{"topic": "Databases", "context": "A clustered index determines the physical order of data in a table.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What is a clustered index?\nHow many clustered indexes can a table have?", "length": 2}
{"topic": "Databases", "context": "A subquery is a query nested within another SQL query.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What is a subquery?\nWhen is a subquery used?", "length": 2}
{"topic": "Databases", "context": "The SQL BETWEEN operator is used to filter the result set within a certain range.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What does the BETWEEN operator do in SQL?\nHow is BETWEEN used in a query?", "length": 2}
{"topic": "Databases", "context": "The LIKE operator is used in SQL to search for a specified pattern in a column.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What is the purpose of the LIKE operator in SQL?\nHow do you use the LIKE operator?", "length": 2}
{"topic": "Databases", "context": "Denormalization is the process of introducing redundancy into a table by merging tables.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What is denormalization in databases?\nWhy would you denormalize a database?", "length": 2}
{"topic": "Databases", "context": "An entity-relationship diagram (ERD) visually represents the relationships between entities in a database.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What is an entity-relationship diagram (ERD)?\nWhat does an ERD help with?", "length": 2}
{"topic": "Databases", "context": "A surrogate key is a unique identifier for an entity, not derived from application data.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What is a surrogate key?\nWhy use a surrogate key?", "length": 2}
{"topic": "Databases", "context": "Referential integrity ensures that foreign keys in a table match primary keys in another table.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What does referential integrity ensure?\nHow is referential integrity enforced?", "length": 2}
{"topic": "Databases", "context": "The COUNT() function in SQL returns the number of rows that match a specified criterion.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "Which SQL function returns the number of rows?\nHow do you use COUNT() in a query?", "length": 2}
{"topic": "Databases", "context": "A self join is a regular join but the table is joined with itself.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What is a self join?\nWhen would you use a self join?", "length": 2}
{"topic": "Databases", "context": "A deadlock occurs when two or more transactions block each other by holding locks on resources.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is a deadlock in databases?\nHow can deadlocks be resolved?", "length": 2}
{"topic": "Databases", "context": "A unique index ensures that no two rows have the same value in specified columns.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What does a unique index guarantee?\nHow is a unique index different from a regular index?", "length": 2}
{"topic": "Databases", "context": "The isolation level in a database transaction determines how transaction integrity is visible to other transactions.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What does the isolation level in a transaction define?\nWhat are common isolation levels?", "length": 2}
{"topic": "Databases", "context": "The third normal form (3NF) eliminates transitive dependencies.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What type of dependency does the third normal form (3NF) eliminate?\nWhy is 3NF important?", "length": 2}
{"topic": "Databases", "context": "Database partitioning can improve performance and manageability.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is the main advantage of partitioning a database?\nHow does partitioning work?", "length": 2}
{"topic": "Databases", "context": "A materialized view stores the result of a query physically.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "How does a materialized view differ from a regular view?\nWhen would you use a materialized view?", "length": 2}
{"topic": "Databases", "context": "In SQL, the EXISTS operator is used to test for the existence of any record in a subquery.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What does the EXISTS operator do in SQL?\nHow is EXISTS typically used?", "length": 2}
{"topic": "Databases", "context": "A database view can simplify complex queries by encapsulating them.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is the benefit of using a database view?\nCan views be updated?", "length": 2}
{"topic": "Databases", "context": "A cross join returns the Cartesian product of two tables.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What does a CROSS JOIN return?\nWhen would you use a CROSS JOIN?", "length": 2}
{"topic": "Databases", "context": "Database replication can be used for high availability and disaster recovery.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is the purpose of database replication?\nWhat are the two main types of replication?", "length": 2}
{"topic": "Databases", "context": "A database cursor allows row-by-row processing of query results.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is a database cursor?\nWhen would you use a cursor?", "length": 2}
{"topic": "Databases", "context": "A self-referential foreign key is a foreign key that references the same table.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is a self-referential foreign key?\nWhen would you use a self-referential foreign key?", "length": 2}
{"topic": "Databases", "context": "OLTP systems are optimized for transactional workloads.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What does OLTP stand for?\nWhat is the primary focus of OLTP systems?", "length": 2}
{"topic": "Databases", "context": "A database trigger can be set to fire before or after an INSERT, UPDATE, or DELETE operation.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "When can a database trigger be set to fire?\nWhat is the purpose of a trigger?", "length": 2}
{"topic": "Databases", "context": "A database schema defines the structure of a database including tables, fields, and relationships.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is a database schema?\nWhy is a schema important?", "length": 2}
{"topic": "Databases", "context": "A foreign key can have actions like CASCADE or SET NULL on delete or update.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What does the CASCADE option do on foreign key deletion?\nWhat does SET NULL do on foreign key deletion?", "length": 2}
{"topic": "Databases", "context": "A NoSQL database is designed to handle large volumes of unstructured data.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is a key characteristic of NoSQL databases?\nWhat type of data model do NoSQL databases typically use?", "length": 2}
{"topic": "Databases", "context": "A star schema is a type of database schema used in data warehousing.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is a star schema?\nWhat is the main advantage of using a star schema?", "length": 2}
{"topic": "Databases", "context": "Sharding is a technique to split data across multiple servers.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is sharding in databases?\nWhat is a challenge of sharding?", "length": 2}
{"topic": "Databases", "context": "A full outer join returns all records when there is a match in either left or right table.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What does a full outer join return?\nWhat happens to unmatched rows in a full outer join?", "length": 2}
{"topic": "Databases", "context": "Database connection pooling is a technique to reuse database connections.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is database connection pooling?\nWhy use connection pooling?", "length": 2}
{"topic": "Databases", "context": "A bitmap index is efficient for columns with low cardinality.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "For what type of column is a bitmap index most efficient?\nWhat is cardinality in the context of databases?", "length": 2}
{"topic": "Databases", "context": "Temporal databases can track data changes over time.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is a key feature of temporal databases?\nWhy are temporal databases useful?", "length": 2}
{"topic": "Databases", "context": "The CAP theorem describes trade-offs between consistency, availability, and partition tolerance.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "Which three properties are described by the CAP theorem?\nWhat does the CAP theorem state?", "length": 2}
{"topic": "Databases", "context": "Database connection pooling is a technique to reuse database connections.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is the main benefit of database connection pooling?\nHow does connection pooling work?", "length": 2}
{"topic": "Databases", "context": "A bitmap index is efficient for columns with low cardinality.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is a bitmap index?\nWhen is a bitmap index most useful?", "length": 2}
{"topic": "Databases", "context": "Temporal databases can track data changes over time.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What is a temporal database?\nWhy are temporal databases important?", "length": 2}
{"topic": "Databases", "context": "The CAP theorem describes trade-offs between consistency, availability, and partition tolerance.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What does the CAP theorem state?\nWhat are the three properties described by the CAP theorem?", "length": 2}
{"topic": "Databases", "context": "Database sharding is a method for distributing data across multiple machines.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What are the main challenges in implementing database sharding?\nWhy is sharding used in databases?", "length": 2}
{"topic": "Databases", "context": "Distributed databases require synchronization mechanisms for consistency.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "Which protocol is commonly used for achieving consensus in distributed databases?\nWhat is the purpose of consensus protocols in distributed databases?", "length": 2}
{"topic": "Databases", "context": "Eventual consistency is a consistency model used in distributed systems.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What does eventual consistency mean in distributed databases?\nHow does eventual consistency differ from strong consistency?", "length": 2}
{"topic": "Databases", "context": "Database replication can be synchronous or asynchronous.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is the main trade-off between synchronous and asynchronous replication?\nWhen would you use synchronous replication?", "length": 2}
{"topic": "Databases", "context": "The BASE model is an alternative to the ACID properties in NoSQL databases.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What does BASE stand for in NoSQL databases?\nHow does BASE differ from ACID?", "length": 2}
{"topic": "Databases", "context": "Two-phase commit protocol is used for atomic transactions across distributed systems.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is the purpose of the two-phase commit protocol?\nWhat are the two phases of the two-phase commit protocol?", "length": 2}
{"topic": "Databases", "context": "A data warehouse is optimized for read-heavy analytical queries.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is a key characteristic of a data warehouse?\nHow does a data warehouse differ from an OLTP database?", "length": 2}
{"topic": "Databases", "context": "Indexes can become fragmented over time, impacting performance.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is index fragmentation?\nHow can you reduce index fragmentation?", "length": 2}
{"topic": "Databases", "context": "A database's query optimizer determines the most efficient way to execute a query.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is the role of a query optimizer in a database?\nWhat factors does the query optimizer consider?", "length": 2}
{"topic": "Databases", "context": "Database tuning involves optimizing queries and schema design.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is the primary goal of database tuning?\nWhat are common techniques for database tuning?", "length": 2}
{"topic": "Databases", "context": "A database's transaction log records all changes made to the database.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is the purpose of a transaction log in a database?\nHow does the transaction log help in case of a failure?", "length": 2}
{"topic": "Databases", "context": "An OLAP cube allows for complex analytical and ad-hoc queries with rapid execution time.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is an OLAP cube?\nWhat is a key benefit of using OLAP cubes?", "length": 2}

{"topic": "Databases", "context": "A database's query execution plan shows how a query will be executed.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is a query execution plan?\nWhy is understanding the execution plan important?", "length": 2}
{"topic": "Databases", "context": "Columnar storage is used in analytical databases for faster aggregation queries.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is the main advantage of columnar storage in databases?\nHow does columnar storage differ from row-based storage?", "length": 2}
{"topic": "Databases", "context": "A database's schema can evolve over time without downtime using techniques like online schema changes.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is online schema change?\nWhy is online schema change important?", "length": 2}
{"topic": "Databases", "context": "Horizontal scaling adds more machines to handle increased load.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is horizontal scaling in databases?\nHow does horizontal scaling differ from vertical scaling?", "length": 2}
{"topic": "Databases", "context": "Multi-version concurrency control (MVCC) allows for concurrent access without locking.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is the main benefit of MVCC in databases?\nHow does MVCC improve performance?", "length": 2}
{"topic": "Databases", "context": "Database federation allows querying multiple databases as a single logical database.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What does database federation enable?\nWhy is federation useful?", "length": 2}
{"topic": "Databases", "context": "In-memory databases store data entirely in RAM for faster access.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is the primary advantage of in-memory databases?\nWhen would you use an in-memory database?", "length": 2}
{"topic": "Databases", "context": "A database's schema evolution refers to the ability to change its structure without downtime.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is schema evolution in databases?\nWhy is schema evolution important?", "length": 2}
{"topic": "Databases", "context": "Database statistics are used by the query optimizer to choose the best execution plan.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What role do database statistics play in query optimization?\nHow are statistics collected in a database?", "length": 2}
{"topic": "Databases", "context": "Imagine that you are designing a library management system where many users can borrow the same book. Each book copy must be tracked individually.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "How would you model the relationship between users and book copies in your database?", "length": 1}
{"topic": "Databases", "context": "You are tasked with creating a social media platform where users can follow each other.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "How would you represent the following relationship in your database?", "length": 1}
{"topic": "Databases", "context": "Suppose you are building a music streaming service where users can create playlists containing multiple songs.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is the best way to store the relationship between playlists and songs?", "length": 1}
{"topic": "Databases", "context": "You are developing a project management tool where each project can have multiple tasks assigned to different users.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "How would you structure your tables to represent projects and tasks?", "length": 1}
{"topic": "Databases", "context": "Suppose you are building an e-commerce application where products can have multiple reviews from different users.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "How would you model the relationship between products and reviews?", "length": 1}
{"topic": "Databases", "context": "Imagine you are designing a restaurant reservation system where each reservation can have multiple guests.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "How would you efficiently store reservations and their guests?", "length": 1}
{"topic": "Databases", "context": "Suppose you are developing an online store where each customer can place multiple orders.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "How would you represent the relationship between customers and orders?", "length": 1}
{"topic": "Databases", "context": "You are tasked with creating a forum where users can post topics and each topic can have multiple replies.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "How would you structure your tables to represent topics and replies?", "length": 1}
{"topic": "Databases", "context": "Imagine you are building a school management system where students can enroll in multiple classes.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is the best way to model the relationship between students and classes?", "length": 1}
{"topic": "Databases", "context": "You are designing a blog platform where each post can have multiple tags associated with it.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "How would you efficiently store the relationship between posts and tags?", "length": 1}
{"topic": "Databases", "context": "Suppose you are building a ticketing system where each event can have multiple tickets sold.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "How would you represent the relationship between events and tickets?", "length": 1}
{"topic": "Databases", "context": "Suppose you are building a movie rental service and each rental record must include both the customer and the movie rented.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "How would you structure your tables to represent rentals?", "length": 1}
{"topic": "Databases", "context": "You are developing a contact management system where users can have multiple email addresses.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "How would you design your tables to allow users to store multiple email addresses?", "length": 1}
{"topic": "Databases", "context": "Imagine you need to record the date and time of each login for users in your application.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "What is the best way to store login timestamps for users?", "length": 1}
{"topic": "Databases", "context": "Suppose you are designing a voting system where each user can vote only once per poll.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "How would you enforce that a user can only vote once per poll?", "length": 1}
{"topic": "Databases", "context": "You are tasked with creating a system to track employee attendance where each attendance record must reference an employee.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "How would you structure your tables to represent employee attendance?", "length": 1}
{"topic": "Databases", "context": "Imagine you are building a to-do application where each task must have a status: 'pending', 'in progress', or 'completed'.", "language": "English", "question_type": "Multiple Choice", "seniority": "Intern", "questions": "How would you enforce valid task statuses in your database?", "length": 1}
{"topic": "Databases", "context": "In a ticket booking system, users can book tickets for different events and each ticket must have a unique seat number per event.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "How would you ensure that each ticket has a unique seat number for an event?", "length": 1}
{"topic": "Databases", "context": "Suppose you are building a library system where each book can be borrowed by multiple users over time.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "How would you track which user borrowed which book and when?", "length": 1}
{"topic": "Databases", "context": "You are designing a product inventory system with products and categories. Each product belongs to one category.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "Which approach would allow you to retrieve all products in a given category efficiently?", "length": 1}
{"topic": "Databases", "context": "You are developing a shipment tracking system. Each shipment can have multiple status updates over time.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "How would you retrieve the latest status update for a shipment efficiently?", "length": 1}
{"topic": "Databases", "context": "Imagine you are designing a forum where users can like posts, but only once per post.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "How would you prevent a user from liking the same post multiple times?", "length": 1}
{"topic": "Databases", "context": "In a university database, students can enroll in multiple courses and receive a grade for each course.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "Which table would store the grades and how would you structure it?", "length": 1}
{"topic": "Databases", "context": "You are building a hotel booking app where each room booking should not overlap with another booking for the same room.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "Which validation would prevent overlapping bookings?", "length": 1}
{"topic": "Databases", "context": "Imagine you are developing a customer loyalty program, and points are awarded for each purchase.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "How would you efficiently calculate the total points for a customer?", "length": 1}
{"topic": "Databases", "context": "Suppose you are designing a system where employees can belong to multiple teams, and teams can have multiple employees.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "How would you model this many-to-many relationship?", "length": 1}
{"topic": "Databases", "context": "You are developing a shipment tracking system. Each shipment can have multiple status updates over time.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "How would you retrieve the latest status update for a shipment efficiently?\nWhat kind of index would be most beneficial for retrieving shipment status updates quickly?", "length": 2}
{"topic": "Databases", "context": "Consider a blog platform where posts can have multiple tags, and tags can be applied to multiple posts.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What is the standard relational database approach to represent this relationship?", "length": 1}
{"topic": "Databases", "context": "You are building a simple user authentication system where usernames must be unique.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "How do you enforce username uniqueness in the database?", "length": 1}
{"topic": "Databases", "context": "In a product catalog, each product belongs to exactly one category.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "How would you link a product to its category?", "length": 1}
{"topic": "Databases", "context": "You need to store user comments for articles, and each comment should be associated with a specific article and user.", "language": "English", "question_type": "Multiple Choice", "seniority": "Junior", "questions": "What columns are essential for a comments table?", "length": 1}
{"topic": "Databases", "context": "You are designing a scalable e-commerce catalog that supports filtering products by multiple attributes (e.g., color, size, brand).", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What schema design would offer flexibility and scalability for product attributes?\nWhat are some potential downsides of using an EAV model for product attributes?", "length": 2}
{"topic": "Databases", "context": "In a financial system, money transfers must be atomic so that either both accounts are updated or none are.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "How would you implement this requirement in your transaction logic?\nWhat ACID property is directly addressed by ensuring all or nothing operations?", "length": 2}
{"topic": "Databases", "context": "Imagine you are developing a reporting system that requires generating monthly sales summaries.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "Which database feature would be most beneficial for generating these summaries efficiently?\nWhen should you refresh a materialized view for monthly sales summaries?", "length": 2}
{"topic": "Databases", "context": "You are building a social network feed that shows posts from a user's friends with pagination.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What strategy should you use to paginate results efficiently?\nWhy is offset pagination less efficient for deep pagination on large datasets?", "length": 2}
{"topic": "Databases", "context": "Suppose you are designing a healthcare database where patient records must be protected from unauthorized access.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What database feature can help enforce row-level security?\nWhat is an alternative to row-level security policies for simple access control?", "length": 2}
{"topic": "Databases", "context": "You are developing an IoT platform that ingests millions of sensor readings per hour.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "Which type of database would be most suitable for high write throughput and time-series queries?\nWhat are some key characteristics of time-series databases that make them suitable for IoT data?", "length": 2}
{"topic": "Databases", "context": "Imagine a scenario where product prices are updated frequently, and you need to track price history.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "How would you design your schema to maintain a history of price changes?\nWhat query would you use to find the current price of a product given this schema?", "length": 2}
{"topic": "Databases", "context": "You are building a global user system with users from different time zones.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "How should you store datetime values to ensure consistency across time zones?\nWhy is storing datetime values in UTC generally preferred?", "length": 2}
{"topic": "Databases", "context": "Suppose you are developing an analytics dashboard that must compute aggregates from billions of rows.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What indexing strategy can improve aggregate query performance?\nBesides indexing, what other techniques can help accelerate analytical queries on large datasets?", "length": 2}
{"topic": "Databases", "context": "You are tasked with designing a CRM platform with customizable fields for each company.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "Which schema approach allows for flexible customization without schema changes?\nWhat is a potential disadvantage of using JSON columns for customizable fields?", "length": 2}
{"topic": "Databases", "context": "In a high-availability payment application, downtime must be minimized during failover.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "Which database replication strategy supports this requirement?\nWhat is the primary benefit of synchronous replication in a high-availability scenario?", "length": 2}
{"topic": "Databases", "context": "Imagine you are designing a SaaS application where each customer has their own isolated data.", "language": "English", "question_type": "Multiple Choice", "seniority": "Mid", "questions": "What multi-tenancy approach provides strong data isolation?\nWhat are the trade-offs of using a separate database per tenant compared to a shared schema with tenant IDs?", "length": 2}
{"topic": "Databases", "context": "You are tasked with designing a multi-region database for a global e-commerce site.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is a key challenge of cross-region replication?\nHow can you mitigate the impact of network latency in a multi-region setup?", "length": 2}
{"topic": "Databases", "context": "Suppose you are architecting a distributed database that must be highly available even during network partitions.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "According to the CAP theorem, what trade-off must you make?\nIn a system prioritizing availability and partition tolerance, what consistency model would typically be used?", "length": 2}
{"topic": "Databases", "context": "You are designing a sharded database architecture for horizontal scaling.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is a common pitfall when choosing a sharding key?\nHow can you address the problem of hot spots in a sharded database?", "length": 2}
{"topic": "Databases", "context": "Imagine you are migrating a monolithic database to microservices, each with its own database.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "How should you handle transactions that span multiple microservices?\nWhat are the disadvantages of using traditional two-phase commit for distributed transactions in a microservices architecture?", "length": 2}
{"topic": "Databases", "context": "You are architecting a system requiring real-time analytics and fast OLTP operations on the same data.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What hybrid approach can support both workloads?\nHow do HTAP databases typically achieve both OLTP and OLAP capabilities?", "length": 2}
{"topic": "Databases", "context": "Suppose you are designing a system that must audit all changes to sensitive data.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is a robust approach to implement auditing?\nWhat database features can assist in automatically capturing changes for auditing?", "length": 2}
{"topic": "Databases", "context": "You are building a system with high write throughput, but reads should remain consistent.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What database architecture is suited for this scenario?\nWhat is a disadvantage of directing all reads to the leader in a high-write throughput system?", "length": 2}
{"topic": "Databases", "context": "Imagine you are responsible for a database that must support GDPR's right to be forgotten.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What design consideration is crucial for compliance?\nBeyond simple deletion, what other techniques might be necessary for 'right to be forgotten' compliance?", "length": 2}
{"topic": "Databases", "context": "You are designing a multi-master replication system for global writes.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What is a key challenge in multi-master database replication?\nDescribe a common strategy for resolving conflicts in multi-master replication.", "length": 2}
{"topic": "Databases", "context": "Suppose you are designing a financial trading system that must never lose a committed transaction.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "Which database feature is critical to ensure durability?\nHow does write-ahead logging (WAL) contribute to database durability?", "length": 2}
{"topic": "Databases", "context": "Imagine you are building an API with strong data consistency and high concurrency requirements.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "Which concurrency control mechanism would you implement?\nHow does MVCC help in achieving high concurrency while maintaining consistency?", "length": 2}
{"topic": "Databases", "context": "You are designing a database for a real-time analytics dashboard that needs to display aggregate data with minimal latency.", "language": "English", "question_type": "Multiple Choice", "seniority": "Senior", "questions": "What architectural pattern can provide pre-computed aggregates for fast retrieval?", "length": 1}
